syntax = "proto3";
package testhellochain.testhellochain;

import "testhellochain/venue.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "testhellochain/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "testhellochain/x/testhellochain/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/testhellochain/testhellochain/params";
  }
  // Queries a list of Showvenues items.
	rpc Showvenues(QueryShowvenuesRequest) returns (QueryShowvenuesResponse) {
		option (google.api.http).get = "/testhellochain/testhellochain/showvenues";
	}

// Queries a list of Callapi items.
	rpc Callapi(QueryCallapiRequest) returns (QueryCallapiResponse) {
		option (google.api.http).get = "/testhellochain/testhellochain/callapi";
	}

// Queries a list of Getgeolocations items.
	rpc Getgeolocations(QueryGetgeolocationsRequest) returns (QueryGetgeolocationsResponse) {
		option (google.api.http).get = "/testhellochain/testhellochain/getgeolocations/{did}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryShowvenuesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryShowvenuesResponse {
  repeated Venue Venue = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryCallapiRequest {

}

message QueryCallapiResponse {
  string category = 1;
  string name = 2;
}

message QueryGetgeolocationsRequest {
  string did = 1;
}

message QueryGetgeolocationsResponse {
  repeated string geolocations = 1;
}

// this line is used by starport scaffolding # 3
